[buildout]
#parts = eggs activate print modwsgi template jsbuild
parts = template jsbuild
develop = . MapFish GeoFormAlchemy/GeoFormAlchemy
newest = false
prefer-final = true
extensions = buildout.dumppickedversions
versions = versions

develop-eggs-directory = buildout/develop-eggs
eggs-directory = buildout/eggs
parts-directory = buildout/parts
bin-directory = buildout/bin

[versions]
Beaker = 1.5.3
FormAlchemy = 1.3.4
FormEncode = 1.2.2
GeoAlchemy = 0.2
JSTools = 0.1.5
Mako = 0.3.2
Paste = 1.7.3.1
PasteDeploy = 1.3.3
PasteScript = 1.7.3
Pylons = 0.9.7
Routes = 1.12.1
SQLAlchemy = 0.6.0
Shapely = 1.0.15
WebError = 0.10.2
WebOb = 0.9.8
WebTest = 1.2.1
collective.recipe.modwsgi = 1.2
decorator = 3.1.2
distribute = 0.6.12
evg.recipe.activate = 0.3
geojson = 1.0.1
iw.recipe.fetcher = 0.2
nose = 0.11.3
psycopg2 = 2.0.14
z3c.recipe.filetemplate = 2.1.0
zc.recipe.egg = 1.2.2
Pygments = 1.3.1
Tempita = 0.4
WebHelpers = 1.0b5
simplejson = 2.1.1

[vars]
# project instance id
instanceid =
# database user
dbuser = www-data
# database password
dbpassword = www-data
# database host
dbhost = localhost
# database port
dbport = 5432
# database name
db =
# project package name
package = mapfishsample
# project egg name
egg = MapFishSample
# url prefix used for mapserv, tilecache, the wsgi app, see
# the Apache conf files
url_prefix = /mapfishsample/

[eggs]
recipe = zc.recipe.egg
eggs = ${vars:egg}
dependent-scripts = true
interpreter = python
initialization =
    import paste.script.command
    for egg in ['MapFish', 'PasteScript', 'Pylons', 'MapFishSample']: paste.script.command.system_plugins.append(egg)

[activate]
recipe = evg.recipe.activate

[print]
recipe = iw.recipe.fetcher
base_url = http://dev.mapfish.org/maven/repository/org/mapfish/print/
files = print-standalone/1.2-SNAPSHOT/print-standalone-1.2-SNAPSHOT.jar

[modwsgi]
recipe = collective.recipe.modwsgi
eggs = ${vars:egg}
config-file = ${buildout:directory}/${vars:package}_prod.ini

[template]
recipe = z3c.recipe.filetemplate
source-directory = .
extends = vars

[jsbuild]
recipe = JSTools:buildjs
resource-dir = jsbuild
config = ${jsbuild:resource-dir}/app.cfg
output-dir = ${vars:package}/public/build
compress = True
