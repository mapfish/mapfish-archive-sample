#
# MapfishSample - Pylons production environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
debug = false
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[app:main]
use = egg:MapfishSample
full_stack = true
static_files = false

cache_dir = /tmp/mapfishsample-${instanceid}_prod_beaker_data
uploads_dir = /tmp/mapfishsample-${instanceid}_uploads
beaker.session.key = mapfishsample
beaker.session.secret = somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# SQLAlchemy database URL
sqlalchemy.url = postgresql://${dbuser}:${dbpassword}@${dbhost}:${dbport}/${db}

# TileCache
tilecache.cfg = %(here)s/tilecache/tilecache.cfg

# MapFish printer controller
print.jar = %(here)s/print/print-standalone-1.2-SNAPSHOT.jar
print.config = %(here)s/print/config.yaml

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false

# Default application language
default_lang = en 

# Logging configuration
[loggers]
keys = root, routes, mapfishsample, sqlalchemy

[handlers]
keys = wsgierrors

[formatters]
keys = generic

[logger_root]
level = WARNING
handlers = wsgierrors

[logger_routes]
level = WARNING
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_mapfishsample]
level = WARNING
handlers =
qualname = mapfishsample

[logger_sqlalchemy]
level = WARNING
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_wsgierrors]
class = pylons.log.WSGIErrorsHandler
args = ()
format = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
